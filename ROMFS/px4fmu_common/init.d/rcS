#!/bin/sh
set +e
set -x  # 如需调试可取消注释

###############################################################################
# 0. 预加载 rc.config 判断启动模式（minimal 或 full）
###############################################################################
# 设置默认值
CONFIG_TYPE="full"

# 读取配置文件
if [ -f /etc/init.d/rc.config ]; then
    echo "[DEBUG] Loading rc.config..."
    . /etc/init.d/rc.config
    echo "[DEBUG] Loaded CONFIG_TYPE=${CONFIG_TYPE}"
else
    echo "rc.config not found. Using default full configuration."
fi

# 检查配置类型
if [ "${CONFIG_TYPE}" = "minimal" ]; then
    echo "[DEBUG] Minimal configuration selected."
    if [ -f /etc/init.d/rc.minimal ]; then
        echo "[DEBUG] Executing rc.minimal..."
        . /etc/init.d/rc.minimal
        exit 0
    else
        echo "ERROR: rc.minimal not found!"
        exit 1
    fi
fi


###############################################################################
# 1. 设置默认环境变量（尽量减少空格以节省闪存占用）
###############################################################################
set R /
set FCONFIG /fs/microsd/etc/config.txt
set FEXTRAS /fs/microsd/etc/extras.txt
set FRC /fs/microsd/etc/rc.txt
set IOFW "/etc/extras/px4_io-v2_default.bin"
set LOGGER_ARGS ""
set LOGGER_BUF 8
set PARAM_FILE ""
set PARAM_BACKUP_FILE ""
set RC_INPUT_ARGS ""
set STORAGE_AVAILABLE no
set SDCARD_EXT_PATH /fs/microsd/ext_autostart
set SDCARD_FORMAT no
set STARTUP_TUNE 1
set VEHICLE_TYPE none
set PARAM_DEFAULTS_VER 1

# 打印系统完整版本信息
ver all

###############################################################################
# 2. 尝试挂载 microSD 卡
###############################################################################
if [ -b "/dev/mmcsd0" ]; then
    echo "Starting system at $(date)"
    if [ "$(lsblk | grep /dev/sd)" ]; then
        if mount -t vfat /dev/mmcsd0 /fs/microsd; then
            if [ -f "/fs/microsd/.format" ]; then
                echo "INFO [init] format /dev/mmcsd0 requested (/fs/microsd/.format)"
                set SDCARD_FORMAT yes
                rm /fs/microsd/.format
                umount /fs/microsd
            else
                set STORAGE_AVAILABLE yes
            fi
        fi

        if [ $STORAGE_AVAILABLE = no -o $SDCARD_FORMAT = yes ]; then
            echo "INFO [init] formatting /dev/mmcsd0"
            set STARTUP_TUNE 15  # tune 15 = SD_ERROR
            if mkfatfs -F 32 /dev/mmcsd0; then
                echo "INFO [init] card formatted"
                if mount -t vfat /dev/mmcsd0 /fs/microsd; then
                    set STORAGE_AVAILABLE yes
                    set STARTUP_TUNE 14  # tune 14 = SD_INIT
                else
                    echo "ERROR [init] card mount failed"
                fi
            else
                echo "ERROR [init] format failed"
            fi
        fi
    else
        if mft query -q -k MTD -s MTD_PARAMETERS -v /mnt/microsd; then
            set STORAGE_AVAILABLE yes
        fi
        echo "Mounting SD card..."
        mount -a || true
    fi
else
    echo "SD card block device not found."
fi

###############################################################################
# 3. 加载 PX4 默认参数文件
###############################################################################
if [ -f /etc/param/default.param ]; then
    param load default.param
else
    echo "Default parameter file not found."
fi

###############################################################################
# 4. 检查固件更新包（如有）并重启使更新生效
###############################################################################
if [ -n "$(ls /boot/px4)" ]; then
    echo "Firmware update detected, applying..."
    cp /boot/px4/* /etc/px4 || true
    reboot cold
fi

###############################################################################
# 5. 如果 STORAGE_AVAILABLE 为 yes，加载用户配置文件
###############################################################################
if [ $STORAGE_AVAILABLE = yes ]; then
    . /etc/init.d/rc.user_config
    set PARAM_FILE /fs/microsd/params
    set PARAM_BACKUP_FILE "/fs/microsd/parameters_backup.bson"
fi

###############################################################################
# 6. 如果 microSD 卡上存在用户自定义的 rc.txt，则执行之
###############################################################################
if [ -f $FRC ]; then
    . $FRC
else
    . ${R}etc/init.d/rc.filepaths
    if ! bsondump docsize /fs/mtd_caldata; then
        echo "New /fs/mtd_caldata size is:"
        bsondump docsize /fs/mtd_caldata
    fi
    if mft query -q -k MTD -s MTD_CALDATA -v /fs/mtd_caldata; then
        param load /fs/mtd_caldata
    fi
    param select $PARAM_FILE
    if ! param import; then
        echo "ERROR [init] param import failed"
        set STARTUP_TUNE 2
        bsondump $PARAM_FILE
        if [ -d "/fs/microsd" ]; then
            cp $PARAM_FILE /fs/microsd/param_import_fail.bson
            if [ -f $PARAM_BACKUP_FILE ]; then
                echo "[init] importing from parameter backup"
                bsondump $PARAM_BACKUP_FILE
                param import $PARAM_BACKUP_FILE
                cp $PARAM_BACKUP_FILE $PARAM_FILE
            fi
            param status
            dmesg >> /fs/microsd/param_import_fail.txt &
        fi
    fi
    if [ $STORAGE_AVAILABLE = yes ]; then
        param select-backup $PARAM_BACKUP_FILE
    fi
    if mft query -q -k MFT -s MFT_ETHERNET -v 1; then
        netman update -i eth0
    fi
    if param greater SYS_AUTOCONFIG 0; then
        param reset_all SYS_AUTOSTART SYS_PARAM_VER RC* CAL_* COM_FLTMODE* LND_FLIGHT* TC_* COM_FLIGHT*
    fi
    set BOARD_ARCH_RC_DEFAULTS ${R}etc/init.d/rc.board_arch_defaults
    if [ -f $BOARD_ARCH_RC_DEFAULTS ]; then
        echo "Board architecture defaults: ${BOARD_ARCH_RC_DEFAULTS}"
        . $BOARD_ARCH_RC_DEFAULTS
    fi
    unset BOARD_ARCH_RC_DEFAULTS
    set BOARD_RC_DEFAULTS ${R}etc/init.d/rc.board_defaults
    if [ -f $BOARD_RC_DEFAULTS ]; then
        echo "Board defaults: ${BOARD_RC_DEFAULTS}"
        . $BOARD_RC_DEFAULTS
    fi
    unset BOARD_RC_DEFAULTS
    if ! param compare SYS_AUTOSTART 0; then
        . ${R}etc/init.d/rc.autostart
        if [ ${VEHICLE_TYPE} == none ]; then
            if [ $STORAGE_AVAILABLE = yes ]; then
                . ${R}etc/init.d/rc.autostart_ext
            else
                echo "ERROR [init] SD card not mounted - can't load external airframe"
            fi
        fi
        if [ ${VEHICLE_TYPE} == none ]; then
            echo "ERROR [init] No airframe file found for SYS_AUTOSTART value"
            param set SYS_AUTOSTART 0
            tune_control play error
        fi
    fi
    if ! param compare SYS_PARAM_VER ${PARAM_DEFAULTS_VER}; then
        echo "Switched to different parameter version. Resetting parameters."
        param set SYS_PARAM_VER ${PARAM_DEFAULTS_VER}
        param set SYS_AUTOCONFIG 1
        param save
        reboot
    fi
    tone_alarm start
    if param compare -s SYS_DM_BACKEND 1; then
        dataman start -r
    else
        if param compare SYS_DM_BACKEND 0; then
            dataman start
        fi
    fi
    send_event start
    load_mon start
    rgbled start -X -q
    rgbled_ncp5623c start -X -q
    rgbled_lp5562 start -X -q
    rgbled_is31fl3195 start -X -q
    if [ -f $FCONFIG ]; then
        echo "Custom: ${FCONFIG}"
        . $FCONFIG
    fi
    if param greater SYS_HITL 0; then
        sensors start -h
        param set GPS_1_CONFIG 0
        if param compare SYS_HITL 2; then
            simulator_sih start
            sensor_baro_sim start
            sensor_mag_sim start
            sensor_gps_sim start
            sensor_agp_sim start
        fi
    else
        set BOARD_RC_SENSORS ${R}etc/init.d/rc.board_sensors
        if [ -f $BOARD_RC_SENSORS ]; then
            echo "Board sensors: ${BOARD_RC_SENSORS}"
            . $BOARD_RC_SENSORS
        fi
        unset BOARD_RC_SENSORS
        . ${R}etc/init.d/rc.sensors
        if param compare -s BAT1_SOURCE 2; then
            esc_battery start
        fi
        if ! param compare BAT1_SOURCE 1; then
            battery_status start
        fi
        sensors start
    fi
    if param compare -s EKF2_EN 1; then
        ekf2 start &
    fi
    if param compare -s LPE_EN 1; then
        local_position_estimator start
    fi
    if param compare -s ATT_EN 1; then
        attitude_estimator_q start
    fi
    if px4io supported; then
        if [ -f $IOFW ]; then
            if ! px4io checkcrc ${IOFW}; then
                tune_control play -t 16
                if px4io update ${IOFW}; then
                    usleep 10000
                    tune_control stop
                    if px4io checkcrc ${IOFW}; then
                        tune_control play -t 17
                    else
                        tune_control play -t 18
                    fi
                else
                    tune_control stop
                fi
            fi
            if ! px4io start; then
                echo "PX4IO start failed"
                set STARTUP_TUNE 2
            fi
        fi
    fi
    rc_update start
    manual_control start
    if param greater -s TRIG_MODE 0; then
        camera_trigger start
        camera_feedback start
    fi
    if param greater -s PPS_CAP_ENABLE 0; then
        pps_capture start
    fi
    if param greater -s RPM_CAP_ENABLE 0; then
        rpm_capture start
    fi
    if param greater -s CAM_CAP_FBACK 0; then
        if camera_capture start; then
            camera_capture on
        fi
    fi
    if param greater SYS_HITL 0; then
        commander start -h
        if ! pwm_out_sim start -m hil; then
            tune_control play error
        fi
    else
        commander start
        dshot start
        pwm_out start
    fi
    . ${R}etc/init.d/rc.vehicle_setup
    if param compare -s MBE_ENABLE 1; then
        mag_bias_estimator start
    fi
    set BOARD_RC_MAVLINK ${R}etc/init.d/rc.board_mavlink
    if [ -f $BOARD_RC_MAVLINK ]; then
        echo "Board mavlink: ${BOARD_RC_MAVLINK}"
        . $BOARD_RC_MAVLINK
    fi
    unset BOARD_RC_MAVLINK
    . ${R}etc/init.d/rc.serial
    rc_input start $RC_INPUT_ARGS
    if ! cdcacm_autostart start; then
        sercon
        echo "Starting MAVLink on /dev/ttyACM0"
        mavlink start -d /dev/ttyACM0
    fi
    param compare CBRK_BUZZER 782090
    if [ "$?" != "0" -o "$STARTUP_TUNE" != "1" ]; then
        tune_control play -t $STARTUP_TUNE
    fi
    navigator start
    set RC_THERMAL_CAL ${R}etc/init.d/rc.thermal_cal
    if [ -f ${RC_THERMAL_CAL} ]; then
        . ${RC_THERMAL_CAL}
    fi
    unset RC_THERMAL_CAL
    if param greater -s MNT_MODE_IN -1; then
        gimbal start
    fi
    if param compare -s TEL_BST_EN 1; then
        bst start -X
    fi
    if param compare -s IMU_GYRO_FFT_EN 1; then
        gyro_fft start
    fi
    if param compare -s IMU_GYRO_CAL_EN 1; then
        gyro_calibration start
    fi
    if param compare -s SENS_EN_PX4FLOW 1; then
        px4flow start -X &
    fi
    if param compare -s PD_GRIPPER_EN 1; then
        payload_deliverer start
    fi
    set BOARD_RC_EXTRAS ${R}etc/init.d/rc.board_extras
    if [ -f $BOARD_RC_EXTRAS ]; then
        echo "Board extras: ${BOARD_RC_EXTRAS}"
        . $BOARD_RC_EXTRAS
    fi
    unset BOARD_RC_EXTRAS
    if [ -f $FEXTRAS ]; then
        echo "Addons script: ${FEXTRAS}"
        . $FEXTRAS
    fi
    set RC_LOGGING ${R}etc/init.d/rc.logging
    if [ -f ${RC_LOGGING} ]; then
        . ${RC_LOGGING}
    fi
    unset RC_LOGGING
    if ! param compare SYS_AUTOSTART 0; then
        . ${R}etc/init.d/rc.autostart.post
    fi
    set BOARD_BOOTLOADER_UPGRADE ${R}etc/init.d/rc.board_bootloader_upgrade
    if [ -f $BOARD_BOOTLOADER_UPGRADE ]; then
        sh $BOARD_BOOTLOADER_UPGRADE
    fi
    unset BOARD_BOOTLOADER_UPGRADE
    if param greater -s UAVCAN_ENABLE 0; then
        if ! uavcan start; then
            tune_control play error
        fi
    else
        if param greater -s CYPHAL_ENABLE 0; then
            cyphal start
        fi
    fi
    if param greater -s ZENOH_ENABLE 0; then
        zenoh start
    fi
fi

###############################################################################
# 重置脚本用到的环境变量，释放内存
###############################################################################
unset R
unset FCONFIG
unset FEXTRAS
unset FRC
unset IOFW
unset LOGGER_ARGS
unset LOGGER_BUF
unset PARAM_FILE
unset PARAM_BACKUP_FILE
unset PARAM_DEFAULTS_VER
unset RC_INPUT_ARGS
unset STORAGE_AVAILABLE
unset SDCARD_EXT_PATH
unset SDCARD_FORMAT
unset STARTUP_TUNE
unset VEHICLE_TYPE

###############################################################################
# 通知 MAVLink 应用系统启动完成
###############################################################################
mavlink boot_complete

###############################################################################
# minimal/full 配置选择逻辑（位于脚本末尾）
###############################################################################
if [ -f /etc/init.d/rc.config ]; then
    echo "Loading rc.config..."
    . /etc/init.d/rc.config
else
    echo "rc.config not found. Using default full configuration."
    CONFIG_TYPE="full"
fi

if [ "$CONFIG_TYPE" = "minimal" ]; then
    echo "Starting minimal configuration..."
    if [ -f /etc/init.d/rc.minimal ]; then
        . /etc/init.d/rc.minimal
        exit 0
    else
        echo "ERROR: rc.minimal not found!"
        exit 1
    fi
fi

echo "Starting full system configuration..."

. /etc/init.d/rc.board
. /etc/init.d/rc.interface
. /etc/init.d/rc.sensors
. /etc/init.d/rc.io
. /etc/init.d/rc.serial
. /etc/init.d/rc.logging
. /etc/init.d/rc.mc_defaults
. /etc/init.d/rc.mc_apps
. /etc/init.d/rc.system

# 初始化按钮和指示灯
rgbled start -X -q
rgbled_ncp5623c start -X -q
rgbled_lp5562 start -X -q
rgbled_is31fl3195 start -X -q

# 初始化PWM输出和DShot遥测
dshot start
ds_tlm start

# 启动PX4核心服务，包括心跳等基础功能；若失败则退出
px4 start -c /dev/null || { echo "Failed to start PX4"; exit 1; }

if [ -f /etc/init.d/rc.board ]; then
    . /etc/init.d/rc.board
else
    echo "Board configuration file not found."
fi

. /etc/init.d/rc.interface
. /etc/init.d/rc.sensors
rc_input start $RC_INPUT_ARGS
mavlink start -d /dev/ttyACM0 || { echo "Failed to start MAVLink"; exit 1; }

if [ -f /etc/init.d/rc.custom ]; then
    . /etc/init.d/rc.custom
else
    echo "Custom startup script not found."
fi

echo "System fully up and running at $(date)"
